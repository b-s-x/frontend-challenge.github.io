{"version":3,"sources":["components/CatCard.js","components/CatCardList.js","store/cats.js","store/likes.js","page/AllCatsPage.js","components/CatHeader.js","page/FavoriteCatsPage.js","App.js","store/index.js","index.js"],"names":["CatCard","props","toggleActiveClass","isLike","className","src","elem","url","alt","onClick","onFavorite","id","join","width","height","viewBox","fill","xmlns","d","CatCardList","console","log","likeIds","catImages","map","has","cats","createSlice","name","initialState","images","reducers","setImages","state","action","payload","selectors","likes","catLikes","toggle","catId","current","Object","keys","reduce","acc","AllCatsPage","dispatch","useDispatch","useSelector","catSelectors","likeSelectors","React","useEffect","length","axios","defaults","headers","common","get","then","res","actions","data","onCatClick","useCallback","Set","CatHeader","to","activeClassName","exact","FavoriteCatsPage","likeElem","onDislike","likeIdsSet","likedImages","useMemo","filter","App","basename","path","component","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f6f67759.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../styles/components/cat_card.scss\"\n\nexport const CatCard = function CatCard(props) {\n\n  const toggleActiveClass = props.isLike ? \"card__favorite__active\" : \"\";\n\n  return (\n    <div className=\"card__box card__box__active\">\n      <img className=\"card__item\" src={props.elem.url} alt=\"\" />\n\n      <div className=\"card__favorite\" onClick={() => props.onFavorite(props.elem.id)}>\n\n        <svg className={[\"card__favorite__img\", toggleActiveClass].join(\" \")} width=\"40\" height=\"37\" viewBox=\"0 0 40 37\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M20 36.7L17.1 34.06C6.8 24.72 0 18.56 0 11C0 4.84 4.84 0 11 0C14.48 0 17.82 1.62 20 4.18C22.18 1.62 25.52 0 29 0C35.16 0 40 4.84 40 11C40 18.56 33.2 24.72 22.9 34.08L20 36.7Z\" />\n        </svg>\n\n      </div>\n    </div>\n  )\n}\n","import React from \"react\"\nimport {CatCard} from \"./CatCard\"\n\nimport '../styles/components/cat_all_page.scss'\n\nexport const CatCardList = function CatCardList(props) {\n  console.log('set', props.likeIds);\n  return (\n    <div className=\"card__container\">\n      {\n        props.catImages.map((elem) => {\n          return (\n            <CatCard\n              elem={elem}\n              isLike={props.likeIds.has(elem.id)}\n              key={elem.id}\n              onFavorite={props.onFavorite}\n            />\n\n          )\n        })\n      }\n    </div>\n  )\n}\n\n","import { createSlice } from '@reduxjs/toolkit'\n\nexport const cats = createSlice({\n  name: 'cats',\n  initialState: {\n    images: [],\n  },\n  reducers: {\n    setImages: (state, action) => {\n      state.images = action.payload.images;\n    },\n  }\n})\n\nexport const selectors = {\n  images: state => state.cats.images,\n};\n","import { createSlice } from '@reduxjs/toolkit'\n\nexport const likes = createSlice({\n  name: 'likes',\n  initialState: {\n    catLikes: {},\n  },\n  reducers: {\n    toggle: (state, action) => {\n      const catId = action.payload;\n      const current = !!state.catLikes[catId];\n      state.catLikes[catId] = !current;\n    }\n  }\n})\n\nexport const selectors = {\n  likeIds: state => Object.keys(state.likes.catLikes).reduce((acc, catId) => {\n    if (!!state.likes.catLikes[catId]) return [ ...acc, catId ]\n\n    return acc;\n  }, []),\n};\n\n","import React from \"react\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport axios from 'axios';\n\nimport { CatCardList } from \"../components/CatCardList\"\n\nimport { selectors as catSelectors, cats } from '../store/cats';\nimport { selectors as likeSelectors, likes } from '../store/likes';\n\nimport '../styles/components/cat_all_page.scss'\n\nexport const AllCatsPage = function AllCatsPage() {\n  const dispatch = useDispatch();\n  const images = useSelector(catSelectors.images);\n  const likeIds = useSelector(likeSelectors.likeIds);\n\n  React.useEffect(() => {\n    if (images.length !== 0) return;\n\n    const URL = \"https://api.thecatapi.com/v1/images/search?limit=100\"\n    axios.defaults.headers.common['x-api-key'] = \"53eeb490-fd74-453a-a80a-826d1cb66fae\"\n\n    axios.get(URL).then(res => {\n      dispatch(cats.actions.setImages({ images: res.data }));\n    })\n  }, [images]);\n\n  const onCatClick = React.useCallback((catId) => {\n    dispatch(likes.actions.toggle(catId));\n  }, []);\n\n  return (\n    <div>\n      <CatCardList\n        likeIds={new Set(likeIds)}\n        catImages={images}\n        onFavorite={onCatClick}\n      />\n    </div>\n  )\n}\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\"\n\nimport '../styles/components/header.scss'\n\nexport const CatHeader = function CatHeader() {\n  return (\n    <nav>\n      <div className=\"link__box\">\n        <NavLink\n          to=\"/\"\n          className=\"link__item\"\n          activeClassName=\"link__selected\"\n          exact\n        >  Все котики </NavLink>\n        <NavLink\n          to=\"/favorites\"\n          className=\"link__item\"\n          activeClassName=\"link__selected\"\n          exact\n        >  Любимые котики </NavLink>\n      </div>\n    </nav>\n  )\n}\n","import React, { useMemo, useCallback } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { CatCardList } from '../components/CatCardList'\n\nimport { selectors as likeSelectors, likes } from '../store/likes';\nimport { selectors as catSelectors } from '../store/cats';\nimport '../styles/components/cat_all_page.scss'\n\nexport const FavoriteCatsPage = function FavoriteCatsPage() {\n\n  const likeElem = useSelector(catSelectors.images);\n\n  const dispatch = useDispatch();\n  const likeIds = useSelector(likeSelectors.likeIds);\n  console.log('likes', likeIds);\n\n  const onDislike = useCallback((catId) => {\n    dispatch(likes.actions.toggle(catId));\n  }, []);\n\n  const likeIdsSet = new Set(likeIds)\n\n  const likedImages = useMemo(() => likeElem.filter((elem) => {\n    return likeIdsSet.has(elem.id)\n  }), [])\n\n  return (\n    <div>\n      {\n        (likedImages.length)\n        ? <div>\n            <CatCardList\n              likeIds={likeIdsSet}\n              catImages={likedImages}\n              onFavorite={onDislike}\n            />\n          </div>\n        : <div className=\"no-favorite__container\">\n            <div className=\"no-favorite__cats\"> Нет любимых котиков? </div>\n          </div>\n      }\n    </div>\n  )\n}\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\"\n\nimport { AllCatsPage } from './page/AllCatsPage'\nimport { CatHeader } from './components/CatHeader'\nimport { FavoriteCatsPage } from './page/FavoriteCatsPage'\n\n\nfunction App() {\n  return (\n    <div>\n      <BrowserRouter basename=\"/frontend-challenge.github.io\">\n        <CatHeader />\n\n        <Switch>\n          <Route exact path=\"/\" component={AllCatsPage} />\n          <Route exact path=\"/favorites\" component={FavoriteCatsPage} />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\n\nimport { cats } from './cats';\nimport { likes } from './likes';\n\nconsole.log('cats', cats);\n\nconst store = configureStore({\n  reducer: {\n    cats: cats.reducer,\n    likes: likes.reducer,\n  }\n})\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\n\nimport App from './App';\nimport store from './store'\n\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={ store }>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}